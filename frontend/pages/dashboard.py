import streamlit as st
import pandas as pd
import plotly.express as px
from datetime import datetime, timedelta

def generate_sample_data():
    """G√©n√®re des donn√©es de d√©monstration pour le dashboard"""
    dates = [datetime.now() - timedelta(days=i) for i in range(30, -1, -1)]
    return pd.DataFrame({
        "Date": dates,
        "Dossiers trait√©s": [max(10, min(30, 20 + (i-15)**2//10)) for i in range(31)],
        "Temps moyen (min)": [max(1, 5 - i/10) for i in range(31)],
        "Taux de r√©ussite": [max(0.8, 0.9 + (i-15)*0.003) for i in range(31)],
        "Type de d√©cision": ["Recevable" if x > 0.6 else "Irrecevable" for x in [0.7, 0.8, 0.9, 0.6, 0.5] * 6 + [0.7]]
    })

def render():
    st.title("üìä Tableau de bord CSPE")
    st.write("Vue d'ensemble des analyses et statistiques")
    
    # KPI Cards
    st.subheader("Indicateurs cl√©s")
    col1, col2, col3 = st.columns(3)
    
    with col1:
        st.metric("Dossiers trait√©s", "742", "+12% vs mois dernier")
    
    with col2:
        st.metric("Temps moyen", "3.2 min", "-1.1 min")
    
    with col3:
        st.metric("Taux de pr√©cision", "94.5%", "+2.3%")
    
    # Graphiques
    st.subheader("Activit√© r√©cente")
    df = generate_sample_data()
    
    # Graphique d'activit√©
    fig1 = px.line(
        df, x="Date", y="Dossiers trait√©s",
        title="Volume de dossiers trait√©s",
        labels={"Dossiers trait√©s": "Nombre de dossiers"}
    )
    st.plotly_chart(fig1, use_container_width=True)
    
    # Graphique de r√©partition
    col1, col2 = st.columns(2)
    
    with col1:
        fig2 = px.pie(
            df, names="Type de d√©cision",
            title="R√©partition des d√©cisions"
        )
        st.plotly_chart(fig2, use_container_width=True)
    
    with col2:
        fig3 = px.bar(
            df, x="Date", y="Temps moyen (min)",
            title="Temps de traitement moyen"
        )
        st.plotly_chart(fig3, use_container_width=True)
    
    # Derni√®res activit√©s
    st.subheader("Derni√®res activit√©s")
    st.dataframe(
        df[["Date", "Dossiers trait√©s", "Taux de r√©ussite"]].tail(5),
        hide_index=True
    )